# ::id homemade_pizza_dough_10_instr0
# ::name homemade_pizza_dough_10_instr0
# ::snt In my kitchen - aid mixer - I add the warm water , the salt , the sugar and olive oil and yeast and wait 5 minutes .
(a4 / and~e.24
    :op1 (a / add-02~e.9
            :ARG0 (i / i~e.8)
            :ARG1 (a3 / and~e.13
                      :op1 (w3 / water~e.12
                               :ARG1-of (w2 / warm-07~e.11))
                      :op2 (s / salt~e.15)
                      :op3 (s2 / sugar~e.18)
                      :op4 (o / oil~e.21
                              :mod (o2 / olive~e.20))
                      :op5 (y / yeast~e.23))
            :location (t2 / thing~e.6
                          :location (k / kitchen~e.3)
                          :poss i
                          :ARG0-of (a2 / aid-01~e.5)
                          :instrument-of (m2 / mix-01~e.6)))
    :op2 (w / wait-01~e.25
            :ARG1 i
            :duration (t / temporal-quantity~e.27
                         :unit (m / minute~e.27)
                         :quant 5~e.26)))

# ::id homemade_pizza_dough_10_instr1
# ::name homemade_pizza_dough_10_instr1
# ::snt Next add the flour and using the dough hook , mix together for 5 - 6 minutes .
(a2 / and~e.33
    :op1 (a / add-02~e.30
            :ARG1 (f / flour~e.32))
    :op2 (u / use-01~e.34
            :ARG1 (h / hook~e.37
                     :purpose (d / dough~e.36)))
    :op3 (m3 / mix-01~e.39
             :duration (b / between~e.42
                          :op1 (t / temporal-quantity~e.45
                                  :unit (m / minute~e.45)
                                  :quant 5~e.42)
                          :op2 (t2 / temporal-quantity~e.45
                                   :unit (m2 / minute~e.45)
                                   :quant 6~e.44))
             :manner (t3 / together~e.40))
    :time (n / next~e.29))

# ::id homemade_pizza_dough_10_instr2
# ::name homemade_pizza_dough_10_instr2
# ::snt If it looks too sticky - add more flour a tablespoon at a time .
(a / add-02~e.53
   :ARG0 (y / you~e.53)
   :ARG1 (f / flour~e.55
            :mod (m / more~e.54))
   :condition (l / look-02~e.49
                 :ARG0 (i / it~e.48)
                 :ARG1 (s / sticky~e.51
                          :ARG2-of (h / have-degree-91~e.50
                                      :ARG1 i
                                      :ARG3 (t2 / too~e.50))))
   :frequency (r / rate-entity-91~e.61
                 :ARG2 (t / tablespoon~e.57
                          :mod (a2 / at-a-time~e.59)
                          :quant 1~e.56))
   :mode imperative~e.53)

