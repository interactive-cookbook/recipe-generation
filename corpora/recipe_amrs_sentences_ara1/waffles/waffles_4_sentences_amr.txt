# ::id waffles_4_instr0
# ::name waffles_4_instr0
# ::snt Beat eggs , add milk .
(a2 / and~e.3
    :op1 (b / beat-01~e.1
            :ARG0 (y / you~e.1)
            :ARG1 (e / egg~e.2)
            :mode imperative~e.6)
    :op2 (a / add-02~e.4
            :ARG0 y
            :ARG1 (m / milk~e.5)
            :mode imperative~e.6))

# ::id waffles_4_instr1
# ::name waffles_4_instr1
# ::snt Sift flour , salt , baking powder and sugar into egg mixture .
(s2 / sift-01~e.7
    :ARG0 (y / you~e.7)
    :ARG1 (a / and~e.14
             :op1 (f / flour~e.8)
             :op2 (s / salt~e.10)
             :op3 (p / powder-01~e.13
                     :ARG1 (b / bake-01~e.12))
             :op4 (s3 / sugar~e.15))
    :ARG2 (m / mixture~e.18
             :consist-of (e / egg~e.17))
    :mode imperative~e.7)

# ::id waffles_4_instr2
# ::name waffles_4_instr2
# ::snt Mix gently but do not over mix .
(m / mix-01~e.20
   :ARG0 (y / you~e.20)
   :manner (g / gentle~e.21)
   :mode imperative~e.23
   :concession-of (m2 / mix-01~e.26
                      :ARG0 y
                      :polarity -~e.24
                      :ARG1-of (o / over-03~e.25)))

# ::id waffles_4_instr3
# ::name waffles_4_instr3
# ::snt Batter will be slightly lumpy .
(l / lump-01~e.32
   :degree (s / slight~e.31)
   :ARG1 B~e.28)

# ::id waffles_4_instr4
# ::name waffles_4_instr4
# ::snt Add oil and mix again .
(a3 / and~e.36
    :op1 (a / add-02~e.34
            :ARG0 (y / you~e.34)
            :ARG1 (o / oil~e.35)
            :mode imperative~e.34)
    :op2 (m / mix-01~e.37
            :ARG0 y
            :mod (a2 / again~e.38)
            :mode imperative~e.34))

# ::id waffles_4_instr5
# ::name waffles_4_instr5
# ::snt Pour 1/4 cup of batter onto hot waffle iron and cook to a light golden brown .
(a / and~e.49
   :op1 (p / pour-01~e.40
           :ARG0 (y / you~e.40)
           :ARG1 (b / batter-01~e.44
                    :quant (v / volume-quantity~e.42
                              :unit (c2 / cup~e.42)
                              :quant "1/4"~e.41))
           :ARG2 (i / iron~e.48
                    :mod (w / waffle~e.47)
                    :ARG1-of (h / hot-05~e.46))
           :mode imperative~e.40)
   :op2 (c / cook-01~e.50
           :ARG0 y
           :manner (b2 / brown~e.55
                       :ARG1-of (l / light-07~e.53)
                       :consist-of (g / gold~e.54))
           :mode imperative~e.56))

# ::id waffles_4_instr6
# ::name waffles_4_instr6
# ::snt Repeat with remaining batter .
(r2 / repeat-01~e.57
    :ARG1 (t / thing~e.61
             :ARG1-of (r / remain-01~e.59)
             :ARG2-of (b / batter-01~e.60)))

# ::id waffles_4_instr7
# ::name waffles_4_instr7
# ::snt Notes and S ...
(a / and~e.63
   :op1 (n / note-01~e.62)
   :op2 (s / string-entity~e.64
           :value "S"~e.64))

